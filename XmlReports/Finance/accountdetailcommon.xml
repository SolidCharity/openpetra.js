<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE reports SYSTEM "reports.dtd">
<reports>
  <report id="Account Detail Common">
    <description>
      Calculations are provided, that can be used on several account detail reports
    </description>
    <reportparameters>
    </reportparameters>

    <reportheader/>
    <pageheader>
    </pageheader>

    <calculations>
      <calculation id="AccountFilter" returns="template" returnsFormat="string">
        <query>
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
                  AND filter BETWEEN {param_account_code_start} AND {param_account_code_end}
              </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="filter" variable="param_account_codes"/>
            <value>)</value>
          </queryDetail>
        </query>
      </calculation>

      <calculation id="CostCentreFilter" returns="template" returnsFormat="string">
        <query>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreRange)">
            <value>
                  AND filter BETWEEN {param_cost_centre_code_start} AND {param_cost_centre_code_end}
              </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreList)">
            <value>AND (</value>
            <value function = "csv" text="filter" variable="param_cost_centre_codes"/>
            <value>)</value>
          </queryDetail>
        </query>
      </calculation>

      <calculation id="Select Account Detail SortBy Account"
        returns="line_a_account_alias_c, line_a_account_code_c, account_name, a_debit_credit_indicator_l"
        returnsFormat="row">
        <query>
          <queryDetail>
            <value>
          SELECT DISTINCT acc.a_account_code_c AS line_a_account_alias_c,
            acc.a_account_code_c AS line_a_account_code_c,
            acc.a_account_code_short_desc_c AS account_name, 
            acc.a_debit_credit_indicator_l AS a_debit_credit_indicator_l
          FROM PUB_a_general_ledger_master AS glm, PUB_a_account AS acc 
          WHERE glm.a_ledger_number_i = acc.a_ledger_number_i 
              AND glm.a_account_code_c = acc.a_account_code_c
              AND NOT EXISTS(
                SELECT prop.a_property_value_c FROM PUB_a_account_property AS prop 
          WHERE prop.a_ledger_number_i = acc.a_ledger_number_i
              AND prop.a_property_code_c = {param_account_hierarchy_c}
              AND prop.a_account_code_c = acc.a_account_code_c)
              AND glm.a_ledger_number_i = {{param_ledger_number_i}}
              AND acc.a_posting_status_l = 1
            </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, acc.a_account_code_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
                AND acc.a_account_code_c BETWEEN {param_account_code_start} AND {param_account_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="acc.a_account_code_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
          UNION 
          SELECT DISTINCT prop.a_property_value_c AS line_a_account_alias_c,
            acc.a_account_code_c AS line_a_account_code_c,
            acc.a_account_code_short_desc_c AS account_name,
            acc.a_debit_credit_indicator_l AS a_debit_credit_indicator_l
          FROM (PUB_a_general_ledger_master AS glm INNER JOIN PUB_a_account AS acc 
            ON glm.a_ledger_number_i = acc.a_ledger_number_i 
              AND glm.a_account_code_c = acc.a_account_code_c)
            INNER JOIN PUB_a_account_property AS prop 
            ON prop.a_ledger_number_i = acc.a_ledger_number_i
            AND prop.a_account_code_c = acc.a_account_code_c
          WHERE glm.a_ledger_number_i = {{param_ledger_number_i}}
            AND prop.a_property_code_c = {param_account_hierarchy_c}
            AND acc.a_posting_status_l = 1
          </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, prop.a_property_value_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
                AND prop.a_property_value_c BETWEEN {param_account_code_start} AND {param_account_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="prop.a_property_value_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
          ORDER BY 1
          </value>
          </queryDetail>
        </query>
      </calculation>
      <calculation id="Select Account Detail SortBy CostCentre"
          returns="line_a_cost_centre_code_c, cost_centre_name"
          returnsFormat="row">
        <query>
          <queryDetail>
            <value>
          SELECT DISTINCT cc.a_cost_centre_code_c AS line_a_cost_centre_code_c,
            cc.a_cost_centre_name_c AS cost_centre_name 
          FROM PUB_a_general_ledger_master AS glm, PUB_a_cost_centre AS cc 
          WHERE glm.a_ledger_number_i = cc.a_ledger_number_i 
             AND glm.a_cost_centre_code_c = cc.a_cost_centre_code_c
            AND glm.a_ledger_number_i = {{param_ledger_number_i}}
            AND cc.a_posting_cost_centre_flag_l = 1
           </value>
          </queryDetail>
          <!--value function="replace(template(CostCentreFilter), filter, cc.a_cost_centre_code_c)"/-->
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreRange)">
            <value>
            AND cc.a_cost_centre_code_c BETWEEN {param_cost_centre_code_start} AND {param_cost_centre_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreList)">
            <value>AND (</value>
            <value function = "csv" text="cc.a_cost_centre_code_c" variable="param_cost_centre_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            ORDER BY cc.a_cost_centre_code_c
          </value>
          </queryDetail>
        </query>
      </calculation>
      <calculation id="Select CostCentres of Account"
          returns="line_a_cost_centre_code_c, cost_centre_name"
          returnsFormat="row">
        <query>
          <queryDetail>
            <value>
          SELECT DISTINCT cc.a_cost_centre_code_c AS line_a_cost_centre_code_c,
            cc.a_cost_centre_name_c AS cost_centre_name
          FROM PUB_a_general_ledger_master AS glm, PUB_a_cost_centre AS cc 
          WHERE glm.a_ledger_number_i = cc.a_ledger_number_i 
            AND glm.a_cost_centre_code_c = cc.a_cost_centre_code_c
            AND glm.a_ledger_number_i = {{param_ledger_number_i}}
            AND cc.a_posting_cost_centre_flag_l = 1
          </value>
          </queryDetail>
          <!--value function="replace(template(CostCentreFilter), filter, cc.a_cost_centre_code_c)"/-->
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreRange)">
            <value>
                AND cc.a_cost_centre_code_c BETWEEN {param_cost_centre_code_start} AND {param_cost_centre_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreList)">
            <value>AND (</value>
            <value function = "csv" text="cc.a_cost_centre_code_c" variable="param_cost_centre_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            AND glm.a_account_code_c = {line_a_account_code_c}
            ORDER BY cc.a_cost_centre_code_c
          </value>
          </queryDetail>
        </query>
      </calculation>
      <calculation id="Select Accounts of CostCentre"
          returns="line_a_account_alias_c, line_a_account_code_c, account_name, a_debit_credit_indicator_l"
          returnsFormat="row">
        <query>
          <queryDetail>
            <value>
          SELECT DISTINCT acc.a_account_code_c AS line_a_account_alias_c,
            acc.a_account_code_c AS line_a_account_code_c,
            acc.a_account_code_short_desc_c AS account_name, a_debit_credit_indicator_l 
          FROM PUB_a_general_ledger_master AS glm, PUB_a_account AS acc 
          WHERE glm.a_ledger_number_i = acc.a_ledger_number_i 
            AND glm.a_account_code_c = acc.a_account_code_c
            AND glm.a_ledger_number_i = {{param_ledger_number_i}}
            AND acc.a_posting_status_l = 1
            </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, acc.a_account_code_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
                AND acc.a_account_code_c BETWEEN {param_account_code_start} AND {param_account_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="acc.a_account_code_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            AND glm.a_cost_centre_code_c = {line_a_cost_centre_code_c}
              AND NOT EXISTS(
                SELECT prop.a_property_value_c FROM PUB_a_account_property AS prop 
                WHERE prop.a_ledger_number_i = acc.a_ledger_number_i
                AND prop.a_property_code_c = {param_account_hierarchy_c}
                AND prop.a_account_code_c = acc.a_account_code_c)
          UNION
          SELECT DISTINCT prop.a_property_value_c AS line_a_account_alias_c,
            acc.a_account_code_c AS line_a_account_code_c,
            acc.a_account_code_short_desc_c AS account_name, 
            acc.a_debit_credit_indicator_l AS a_debit_credit_indicator_l
          FROM (PUB_a_general_ledger_master AS glm INNER JOIN PUB_a_account AS acc 
            ON glm.a_ledger_number_i = acc.a_ledger_number_i 
              AND glm.a_account_code_c = acc.a_account_code_c)
            INNER JOIN PUB_a_account_property AS prop 
            ON prop.a_ledger_number_i = acc.a_ledger_number_i
            AND prop.a_account_code_c = acc.a_account_code_c
          WHERE glm.a_ledger_number_i = {{param_ledger_number_i}}
            AND prop.a_property_code_c = {param_account_hierarchy_c}
            AND acc.a_posting_status_l = 1
          </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, prop.a_property_value_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
              AND prop.a_property_value_c BETWEEN {param_account_code_start} AND {param_account_code_end}
          </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="prop.a_property_value_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            AND glm.a_cost_centre_code_c = {line_a_cost_centre_code_c}
            ORDER BY 1
          </value>
          </queryDetail>
        </query>
      </calculation>

      <calculation id="Select Reference Names"
          returns="line_reference_c"
          returnsFormat="row">
        <template>
          <queryDetail>
            <value>
          SELECT DISTINCT  a_reference_c AS line_reference_c
          FROM {{transaction}} AS trans
          WHERE trans.a_ledger_number_i = {{param_ledger_number_i}}
          </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, trans.a_account_code_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
                AND trans.a_account_code_c BETWEEN {param_account_code_start} AND {param_account_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_account_code_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <!--value function="replace(template(CostCentreFilter), filter, trans.a_cost_centre_code_c)"/-->
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreRange)">
            <value>
                AND trans.a_cost_centre_code_c BETWEEN {param_cost_centre_code_start} AND {param_cost_centre_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_cost_centre_code_c" variable="param_cost_centre_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            AND trans.a_transaction_date_d BETWEEN {#param_start_date#} AND {#param_end_date#}
            AND ((not {param_reference_start} = &quot;&quot; AND NOT {param_reference_end} = &quot;&quot; AND
              trans.a_reference_c BETWEEN {param_reference_start} AND {param_reference_end})
              OR ({param_reference_start} = &quot;&quot; OR {param_reference_end} = &quot;&quot;))
            AND trans.a_transaction_status_l = 1
            AND NOT (trans.a_system_generated_l = 1 AND trans.a_narrative_c LIKE "Year end re-allocation%")
          </value>
          </queryDetail>
        </template>
        <query>
          <queryDetail>
            <parameter name="transaction" value="PUB_a_transaction"/>
          </queryDetail>
          <queryDetail>
            <value>
            ORDER BY 1
          </value>
          </queryDetail>
        </query>
      </calculation>

      <calculation id="Select Analysis Attribute Names"
          returns="line_analysis_attribute_value_c, a_analysis_type_code_c, a_analysis_type_description_c"
          returnsFormat="row">
        <template>
          <queryDetail>
            <value>
          SELECT DISTINCT  a_analysis_attribute_value_c AS line_analysis_attribute_value_c,
            typ.a_analysis_type_code_c, a_analysis_type_description_c
          FROM {{transaction}} AS trans, {{transanalattrib}} AS attr, PUB_a_analysis_type as typ 
          WHERE trans.a_ledger_number_i = attr.a_ledger_number_i 
            AND trans.a_batch_number_i = attr.a_batch_number_i 
            AND trans.a_journal_number_i = attr.a_journal_number_i 
            AND trans.a_transaction_number_i = attr.a_transaction_number_i
            AND typ.a_analysis_type_code_c = attr.a_analysis_type_code_c
            AND trans.a_ledger_number_i = {{param_ledger_number_i}}
          </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, trans.a_account_code_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
                AND trans.a_account_code_c BETWEEN {param_account_code_start} AND {param_account_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_account_code_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <!--value function="replace(template(CostCentreFilter), filter, trans.a_cost_centre_code_c)"/-->
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreRange)">
            <value>
                AND trans.a_cost_centre_code_c BETWEEN {param_cost_centre_code_start} AND {param_cost_centre_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_cost_centre_code_c" variable="param_cost_centre_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            AND trans.a_transaction_date_d BETWEEN {#param_start_date#} AND {#param_end_date#}            
            AND ((not {param_analysis_type_start} = &quot;&quot; AND NOT {param_analysis_type_end} = &quot;&quot; AND
              attr.a_analysis_attribute_value_c BETWEEN {param_analysis_type_end} AND {param_analysis_type_end})
              OR ({param_analysis_type_start} = &quot;&quot; OR {param_analysis_type_end} = &quot;&quot;))
            AND trans.a_transaction_status_l = 1
            AND NOT (trans.a_system_generated_l = 1 AND trans.a_narrative_c LIKE "Year end re-allocation%")
          </value>
          </queryDetail>
        </template>
        <query>
          <queryDetail>
            <parameter name="transaction" value="PUB_a_transaction"/>
            <parameter name="transanalattrib" value="PUB_a_trans_anal_attrib"/>
          </queryDetail>
          <queryDetail>
            <value>
            ORDER BY 1
          </value>
          </queryDetail>
        </query>
      </calculation>
      <calculation id="Select Transactions of AccountCostCentre"
          returns="a_transaction_date_d, a_amount_in_base_currency_n, a_amount_in_intl_currency_n, a_transaction_amount_n, a_debit_credit_indicator_l, a_transaction_currency_c, a_narrative_c, a_reference_c, batchNumber, journalNumber, transactionNumber"
          returnsFormat="row">
        <template>
          <queryDetail>
            <value>
          SELECT 
            a_transaction_date_d,
            trans.a_batch_number_i as batchNumber, 
            trans.a_journal_number_i as journalNumber, 
            trans.a_transaction_number_i as transactionNumber,
            a_amount_in_base_currency_n,
            a_amount_in_intl_currency_n,
            a_debit_credit_indicator_l,
            j.a_transaction_currency_c,
            a_transaction_amount_n,
            a_narrative_c,
            a_reference_c
          FROM {{transaction}} AS trans, {{journal}} AS j 
          WHERE trans.a_ledger_number_i = j.a_ledger_number_i 
            AND trans.a_journal_number_i = j.a_journal_number_i
            AND trans.a_batch_number_i = j.a_batch_number_i
            AND trans.a_ledger_number_i = {{param_ledger_number_i}}
            AND trans.a_account_code_c = {line_a_account_code_c} 
            AND trans.a_cost_centre_code_c = {line_a_cost_centre_code_c}
            AND trans.a_transaction_date_d BETWEEN {#param_start_date#} AND {#param_end_date#}
            AND trans.a_transaction_status_l = 1
            AND NOT (trans.a_system_generated_l = 1 AND trans.a_narrative_c LIKE "Year end re-allocation%")
            </value>
          </queryDetail>
        </template>
        <query>
          <queryDetail>
            <parameter name="transaction" value="PUB_a_transaction"/>
            <parameter name="journal" value="PUB_a_journal"/>
          </queryDetail>
          <queryDetail>
            <value>
            ORDER BY 1, 2, 3, 4
          </value>
          </queryDetail>
        </query>
      </calculation>

      <calculation id="Select Transactions by Reference"
          returns="a_transaction_date_d, a_amount_in_base_currency_n, a_amount_in_intl_currency_n, a_debit_credit_indicator_l, a_narrative_c, a_account_code_c, a_cost_centre_code_c"
          returnsFormat="row">
        <template>
          <queryDetail>
            <value>
          SELECT 
            a_transaction_date_d, 
            a_batch_number_i, 
            a_journal_number_i, 
            a_transaction_number_i,          
            a_amount_in_base_currency_n,
            a_amount_in_intl_currency_n,
            a_debit_credit_indicator_l,
            a_account_code_c, a_cost_centre_code_c,
            a_narrative_c
          FROM {{transaction}} AS trans 
          WHERE trans.a_reference_c = {line_reference_c}
            AND trans.a_ledger_number_i = {{param_ledger_number_i}}
          </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, trans.a_account_code_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
                AND trans.a_account_code_c BETWEEN {param_account_code_start} AND {param_account_code_end}
            </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_account_code_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <!--value function="replace(template(CostCentreFilter), filter, trans.a_cost_centre_code_c)"/-->
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreRange)">
            <value>
              AND trans.a_cost_centre_code_c BETWEEN {param_cost_centre_code_start} AND {param_cost_centre_code_end}
          </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_cost_centre_code_c" variable="param_cost_centre_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            AND trans.a_transaction_date_d BETWEEN {#param_start_date#} AND {#param_end_date#}
            AND trans.a_transaction_status_l = 1
            AND NOT (trans.a_system_generated_l = 1 AND trans.a_narrative_c LIKE "Year end re-allocation%")
          </value>
          </queryDetail>
        </template>
        <query>
          <queryDetail>
            <parameter name="transaction" value="PUB_a_transaction"/>
          </queryDetail>
          <queryDetail>
            <value>
            ORDER BY 1, 2, 3, 4
          </value>
          </queryDetail>
        </query>
      </calculation>
      <calculation id="Select Transactions by Analysis Attribute"
          returns="a_transaction_date_d, a_amount_in_base_currency_n, a_amount_in_intl_currency_n, a_transaction_amount_n, a_debit_credit_indicator_l, a_narrative_c, line_reference_c, a_account_code_c, a_cost_centre_code_c"
          returnsFormat="row">
        <template>
          <queryDetail>
            <value>
          SELECT 
            a_transaction_date_d,
            trans.a_batch_number_i, 
            trans.a_journal_number_i, 
            trans.a_transaction_number_i,
            a_amount_in_base_currency_n,
            a_amount_in_intl_currency_n,
            a_debit_credit_indicator_l,
            a_transaction_amount_n,
            a_narrative_c,
            a_reference_c AS line_reference_c,
            trans.a_account_code_c, trans.a_cost_centre_code_c
          FROM {{transaction}} AS trans, {{transanalattrib}} AS attr 
          WHERE trans.a_ledger_number_i = attr.a_ledger_number_i
            AND trans.a_batch_number_i = attr.a_batch_number_i 
            AND trans.a_journal_number_i = attr.a_journal_number_i 
            AND trans.a_transaction_number_i = attr.a_transaction_number_i
            AND attr.a_analysis_attribute_value_c = {line_analysis_attribute_value_c}
            AND trans.a_ledger_number_i = {{param_ledger_number_i}}
          </value>
          </queryDetail>
          <!--value function="replace(template(AccountFilter), filter, trans.a_account_code_c)"/-->
          <queryDetail condition="eq({param_rgrAccounts},AccountRange)">
            <value>
              AND trans.a_account_code_c BETWEEN {param_account_code_start} AND {param_account_code_end}
          </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrAccounts},AccountList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_account_code_c" variable="param_account_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <!--value function="replace(template(CostCentreFilter), filter, trans.a_cost_centre_code_c)"/-->
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreRange)">
            <value>
              AND trans.a_cost_centre_code_c BETWEEN {param_cost_centre_code_start} AND {param_cost_centre_code_end}
          </value>
          </queryDetail>
          <queryDetail condition="eq({param_rgrCostCentres},CostCentreList)">
            <value>AND (</value>
            <value function = "csv" text="trans.a_cost_centre_code_c" variable="param_cost_centre_codes" format="Text"/>
            <value>)</value>
          </queryDetail>
          <queryDetail>
            <value>
            AND trans.a_transaction_date_d BETWEEN {#param_start_date#} AND {#param_end_date#}
            AND trans.a_transaction_status_l = 1
            AND NOT (trans.a_system_generated_l = 1 AND trans.a_narrative_c LIKE "Year end re-allocation%")
          </value>
          </queryDetail>
        </template>
        <query>
          <queryDetail>
            <parameter name="transaction" value="PUB_a_transaction"/>
            <parameter name="transanalattrib" value="PUB_a_trans_anal_attrib"/>
          </queryDetail>
          <queryDetail>
            <value>
            ORDER BY 1, 2, 3, 4
          </value>
          </queryDetail>
        </query>
      </calculation>


      <calculation id="Select Analysis Attributes of Transaction"
          returns="a_analysis_type_code_c, a_analysis_attribute_value_c"
          returnsFormat="row">
        <template>
          <queryDetail>
            <value>
          SELECT 
            attr.a_analysis_type_code_c,
            attr.a_analysis_attribute_value_c
          FROM {{transaction}} AS trans, {{transanalattrib}} AS attr 
          WHERE trans.a_ledger_number_i = attr.a_ledger_number_i
            AND trans.a_batch_number_i = attr.a_batch_number_i 
            AND trans.a_journal_number_i = attr.a_journal_number_i 
            AND trans.a_transaction_number_i = attr.a_transaction_number_i
            AND trans.a_batch_number_i = {{batchNumber}}
            AND trans.a_journal_number_i = {{journalNumber}}
            AND trans.a_transaction_number_i = {{transactionNumber}}
            AND trans.a_ledger_number_i = {{param_ledger_number_i}}
          </value>
          </queryDetail>
        </template>
        <query>
          <queryDetail>
            <parameter name="transaction" value="PUB_a_transaction"/>
            <parameter name="transanalattrib" value="PUB_a_trans_anal_attrib"/>
          </queryDetail>
          <queryDetail>
            <value>
            ORDER BY 1, 2
          </value>
          </queryDetail>
        </query>
      </calculation>

    </calculations>

    <levels>

      <!-- required: the main report level -->
      <level name="main">
        <detail>
          <lowerLevelReport level="todo">
          </lowerLevelReport>
        </detail>
      </level>
      <!-- main -->

    </levels>
  </report>
  <!-- AccountDetail Common -->

</reports>